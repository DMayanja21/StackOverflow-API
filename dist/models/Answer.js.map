{"version":3,"sources":["../../server/models/Answer.js"],"names":["mongoose","require","Schema","answerSchema","question_id","type","Types","ObjectId","required","text","String","user_id","status","upvotes","downvotes","preferred","Boolean","comments","date","Date","comment","Answer","model","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,IAAMA,QAAQ,2BAAGC,OAAO,CAAC,UAAD,CAAV,CAAd,C,CAEA;;mCAGID,Q;IADFE,M,QAAAA,M,EAGF;;;AACA,IAAMC,YAAY,2BAAG,IAAID,MAAJ,CAAW;AAC9B;AACAE,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAEL,QAAQ,CAACE,MAAT,CAAgBI,KAAhB,CAAsBC,QADjB;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GAFiB;AAM9BC,EAAAA,IAAI,EAAE;AACJJ,IAAAA,IAAI,EAAEK,MADF;AAEJF,IAAAA,QAAQ,EAAE;AAFN,GANwB;AAU9BG,EAAAA,OAAO,EAAE;AACPN,IAAAA,IAAI,EAAEL,QAAQ,CAACE,MAAT,CAAgBI,KAAhB,CAAsBC,QADrB;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GAVqB;AAc9BI,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,CAAC;AACRF,MAAAA,OAAO,EAAE;AACPN,QAAAA,IAAI,EAAEL,QAAQ,CAACE,MAAT,CAAgBI,KAAhB,CAAsBC,QADrB;AAEPC,QAAAA,QAAQ,EAAE;AAFH;AADD,KAAD,CADH;AAONM,IAAAA,SAAS,EAAE,CAAC;AACVH,MAAAA,OAAO,EAAE;AACPN,QAAAA,IAAI,EAAEL,QAAQ,CAACE,MAAT,CAAgBI,KAAhB,CAAsBC,QADrB;AAEPC,QAAAA,QAAQ,EAAE;AAFH;AADC,KAAD;AAPL,GAdsB;AA6B9BO,EAAAA,SAAS,EAAE;AACTV,IAAAA,IAAI,EAAEW,OADG;AAETR,IAAAA,QAAQ,EAAE,IAFD;AAGT,eAAS;AAHA,GA7BmB;AAkC9BS,EAAAA,QAAQ,EAAE,CAAC;AACTN,IAAAA,OAAO,EAAE;AACPN,MAAAA,IAAI,EAAEL,QAAQ,CAACE,MAAT,CAAgBI,KAAhB,CAAsBC,QADrB;AAEPC,MAAAA,QAAQ,EAAE;AAFH,KADA;AAKTU,IAAAA,IAAI,EAAE;AACJb,MAAAA,IAAI,EAAEc,IADF;AAEJ,iBAAS,IAAIA,IAAJ,EAFL;AAGJX,MAAAA,QAAQ,EAAE;AAHN,KALG;AAUTY,IAAAA,OAAO,EAAE;AACPf,MAAAA,IAAI,EAAEK,MADC;AAEPF,MAAAA,QAAQ,EAAE;AAFH;AAVA,GAAD;AAlCoB,CAAX,CAAH,CAAlB,C,CAqDA;;AACA,IAAMa,MAAM,2BAAGrB,QAAQ,CAACsB,KAAT,CAAe,QAAf,EAAyBnB,YAAzB,CAAH,CAAZ;;AACAoB,MAAM,CAACC,OAAP,GAAiBH,MAAjB","sourcesContent":["// Call mongoose\nconst mongoose = require('mongoose');\n\n// Call Schema constructor\nconst {\n  Schema,\n} = mongoose;\n\n// Create an answer schema\nconst answerSchema = new Schema({\n  // answer_id: mongoose.Schema.Types.ObjectId,\n  question_id: {\n    type: mongoose.Schema.Types.ObjectId,\n    required: true,\n  },\n  text: {\n    type: String,\n    required: true,\n  },\n  user_id: {\n    type: mongoose.Schema.Types.ObjectId,\n    required: true,\n  },\n  status: {\n    upvotes: [{\n      user_id: {\n        type: mongoose.Schema.Types.ObjectId,\n        required: true,\n      },\n    }],\n    downvotes: [{\n      user_id: {\n        type: mongoose.Schema.Types.ObjectId,\n        required: true,\n      },\n    }],\n\n  },\n  preferred: {\n    type: Boolean,\n    required: true,\n    default: false,\n  },\n  comments: [{\n    user_id: {\n      type: mongoose.Schema.Types.ObjectId,\n      required: true,\n    },\n    date: {\n      type: Date,\n      default: new Date(),\n      required: true,\n    },\n    comment: {\n      type: String,\n      required: true,\n    },\n  }],\n\n\n});\n\n// Export model\nconst Answer = mongoose.model('Answer', answerSchema);\nmodule.exports = Answer;\n"],"file":"Answer.js"}