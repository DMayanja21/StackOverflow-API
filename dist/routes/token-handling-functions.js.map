{"version":3,"sources":["../../server/routes/token-handling-functions.js"],"names":["tokenSecretKey","createToken","user","jwt","sign","err","token","tokenToReturn","retrieveToken","req","res","next","bearerHeader","headers","authorization","undefined","bearer","split","bearerToken","status","json","error","verifyToken","verify","authData","console","log","authInfo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA,IAAMA,cAAc,2BAAG,kBAAH,CAApB,C,CAEA;;SACsBC,W;;EAYtB;;;;;;+BAZO,iBAA2BC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGCC,yBAAIC,IAAJ,CAAS;AACbF,cAAAA,IAAI,EAAJA;AADa,aAAT,YAGHF,cAHG,GAIN,UAACK,GAAD,EAAMC,KAAN,EAAiB;AAAA;AAAA;AAAA,qBAAAC,aAAa,GAAGD,KAAhB;AAAqB,aAJhC,CAHD;;AAAA;AAAA;AAAA,6CASEC,aATF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAaA,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,IAAjC,EAAuC;AAAA;AAC5C;AACA,MAAMC,YAAY,2BAAGH,GAAG,CAACI,OAAJ,CAAYC,aAAf,CAAlB,CAF4C,CAG5C;;AAH4C;;AAI5C,MAAIF,YAAY,KAAKG,SAArB,EAAgC;AAAA;AAC9B;AACA,QAAMC,MAAM,2BAAGJ,YAAY,CAACK,KAAb,CAAmB,GAAnB,CAAH,CAAZ;AACA,QAAMC,WAAW,2BAAGF,MAAM,CAAC,CAAD,CAAT,CAAjB,CAH8B,CAK9B;;AAL8B;AAM9BP,IAAAA,GAAG,CAACH,KAAJ,GAAYY,WAAZ;AAN8B;AAO9BP,IAAAA,IAAI;AACL,GARD,MAQO;AAAA;AAAA;AACLD,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,GADW;AAEnBE,MAAAA,KAAK,EAAE;AAFY,KAArB;AAID;AACF;;SAEqBC,W;;EActB;AACA;AACA;AACA;AACA;;;;;;+BAlBO,kBAA2BhB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACkBH,yBAAIoB,MAAJ,CAAWjB,KAAX,YAAqBN,cAArB,GAAuC,UAACK,GAAD,EAAMmB,QAAN,EAAmB;AAAA;AAAA;;AAC/E,kBAAInB,GAAJ,EAAS;AAAA;AAAA;AACPoB,gBAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,oBAAMP,MAAM,4BAAG,GAAH,CAAZ;AAFO;AAGP,uBAAOA,MAAP;AACD,eAJD;AAAA;AAAA;;AAD+E;AAO/E,qBAAOK,QAAP;AACD,aARsB,CADlB;;AAAA;AACCG,YAAAA,QADD;AAAA;AAAA,8CAWEA,QAXF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import jwt from 'jsonwebtoken';\n\nconst tokenSecretKey = 'stackOverflowAPI';\n\n// Function to create token on login\nexport async function createToken(user) {\n  let tokenToReturn;\n\n  await jwt.sign({\n    user,\n  },\n  `${tokenSecretKey}`,\n  (err, token) => (tokenToReturn = token));\n\n  return tokenToReturn;\n}\n\n// MIDDLEWARE function to retrieve token from request headers\nexport function retrieveToken(req, res, next) {\n  // Get authorization header value\n  const bearerHeader = req.headers.authorization;\n  // Check if bearerHeader is undefned\n  if (bearerHeader !== undefined) {\n    // Get the token out of the bearer.\n    const bearer = bearerHeader.split(' ');\n    const bearerToken = bearer[1];\n\n    // Set the token\n    req.token = bearerToken;\n    next();\n  } else {\n    res.status(403).json({\n      status: 403,\n      error: 'No token found.',\n    });\n  }\n}\n\nexport async function verifyToken(token) {\n  const authInfo = await jwt.verify(token, `${tokenSecretKey}`, (err, authData) => {\n    if (err) {\n      console.log('Invalid credentials');\n      const status = 403;\n      return status;\n    }\n\n    return authData;\n  });\n\n  return authInfo;\n}\n\n// module.exports = {\n//     createToken,\n//     retrieveToken,\n//     verifyToken\n// };\n"],"file":"token-handling-functions.js"}