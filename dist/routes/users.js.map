{"version":3,"sources":["../../server/routes/users.js"],"names":["express","require","router","Router","User","get","req","res","find","then","result","length","status","json","message","retrieveToken","params","userID","token","authData","findOne","_id","post","user","first_name","body","firstName","last_name","lastName","email_address","emailAddress","setPassword","password","save","err","console","error","userEmail","userPassword","retrievedUser","passwordIsValid","validPassword","user_id","module","exports"],"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","sourcesContent":["// Call dependencies\n// Token handling functions\nimport {\n  createToken,\n  retrieveToken,\n  verifyToken,\n} from './token-handling-functions';\n\nconst express = require('express');\n\nconst router = express.Router();\nconst User = require('../models/User');\n\n// Handling GET requests for all users\nrouter.get('/', (req, res) => {\n  // This is an unprotected route that retrieves all users\n  // It only exists for testing purposes\n\n  User.find().then((result) => {\n    if (result && result.length) {\n      res.status(200).json(result);\n    } else {\n      res.status(404).json({\n        status: 404,\n        message: 'No users found',\n      });\n    }\n  });\n});\n\n// Handling GET requests for a single user\nrouter.get('/:userID', retrieveToken, (req, res) => {\n  // This endpoint is protected b JWT usage.\n  // The createToken retrieveToken and verifyToken methods\n  // are all in the ./token-handling-functions.js file\n\n  const {\n    userID,\n  } = req.params;\n\n  verifyToken(req.token).then((authData) => {\n    // authData is available if needed\n    if (authData === 403) {\n      res.status(403).json({\n        status: 403,\n        message: 'Invalid credentials',\n      });\n      return;\n    }\n\n    User.findOne({\n      _id: userID,\n    }).then((result) => {\n      if (result) {\n        res.status(200).json(result);\n      } else {\n        res.status(404).json({\n          status: 404,\n          message: 'No such user found',\n        });\n      }\n    });\n  });\n});\n\n// Handling POST requests for creating a new user\nrouter.post('/signup', (req, res) => {\n  // Constructing new user from the information received.\n  const user = new User();\n  user.first_name = req.body.firstName;\n  user.last_name = req.body.lastName;\n  user.email_address = req.body.emailAddress;\n  user.setPassword(req.body.password);\n\n  user.save()\n    .then((result) => {\n      res.status(201).json({\n        result,\n        message: 'Success creating new User',\n      });\n    })\n    .catch((err) => {\n      console.error(\n        `An error occurred saving new user ${user} in database Error:${err}`,\n      );\n      res.status(500).json({\n        err,\n        message: `An error occurred saving new user ${user} in database`,\n      });\n    });\n});\n\n// Handling POST requests for login in a user\nrouter.post('/login', (req, res) => {\n  // Retrieving login detailss to be verified\n  const userEmail = req.body.emailAddress;\n  const userPassword = req.body.password;\n\n  // Searching for matching user in the database\n  User.findOne({\n    email_address: userEmail,\n  },\n  (err, retrievedUser) => {\n    if (retrievedUser !== null) {\n      // Check if the password received is valid\n      const passwordIsValid = retrievedUser.validPassword(\n        userPassword,\n      );\n      if (passwordIsValid === true) {\n        // Construct a user object to send back to the front end\n        const user = {\n          user_id: retrievedUser._id,\n          first_name: retrievedUser.first_name,\n          last_name: retrievedUser.last_name,\n          email_address: retrievedUser.email_address,\n        };\n\n        // Creates a JWT (token) to secure any further user transactions\n        createToken(user).then((token) => {\n          res.status(200).json({\n            token,\n          });\n        });\n      } else {\n        // When password is invalid, login is rejected\n        res.status(401).json({\n          status: 401,\n          message: 'Credentials are invalid',\n        });\n      }\n    } else if (err) {\n      // Throw a generic error for any uncovered cases\n      console.error(\n        `There was an error:${err} while finding user: ${req.body} in the database`,\n      );\n      res.status(500).json({\n        status: 500,\n        err,\n        message: 'There was an error logging in',\n      });\n    } else {\n      // Throw an error if no user was found in the database\n      res.status(404).json({\n        status: 404,\n        message: 'The user does not exist',\n      });\n    }\n  });\n});\n\n// Handing PATCH requests for updating a user\n// Handling DELETE requests for deleting a user\n\nmodule.exports = router;\n"],"file":"users.js"}