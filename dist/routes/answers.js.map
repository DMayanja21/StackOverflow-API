{"version":3,"sources":["../../server/routes/answers.js"],"names":["express","require","router","Router","Answer","get","req","res","params","questionID","find","question_id","then","result","length","status","json","message","err","console","error","retrieveToken","token","authData","userID","user_id","results","post","log","body","user","text","newAnswer","save","patch","answerID","filter","_id","update","preferred","findOneAndUpdate","findByIdAndDelete","module","exports"],"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","sourcesContent":["// Token handling functions\nimport {\n  createToken,\n  retrieveToken,\n  verifyToken,\n} from './token-handling-functions';\n\nconst express = require('express');\n\nconst router = express.Router();\nconst Answer = require('../models/Answer');\n\n\n// Get all the answers to a qn\n\nrouter.get('/byqn/:questionID', (req, res) => {\n  const {\n    questionID,\n  } = req.params;\n\n  Answer.find({\n    question_id: questionID,\n  })\n    .then((result) => {\n      if (result && result.length) {\n        res.status(200).json(result);\n      } else {\n        res.status(404).json({\n          status: 404,\n          message: 'That question has no answers yet',\n        });\n      }\n    })\n    .catch((err) => {\n      const message = `An error occurred querying MongoDB for answers to question: ${questionID}`;\n      console.error(message, err);\n      res.status(500).json({\n        status: 500,\n        message,\n        err,\n      });\n    });\n});\n\n// Get all the answers by a single user\nrouter.get('/user/:userID', retrieveToken, (req, res) => {\n  verifyToken(req.token).then((authData) => {\n    // Authdata is available if required\n    if (authData === 403) {\n      res.status(403).json({\n        status: 403,\n        message: 'Invalid credentials',\n      });\n    }\n\n    const {\n      userID,\n    } = req.params;\n    Answer.find({\n      user_id: userID,\n    })\n      .then((results) => {\n        if (results) {\n          res.status(200).json(results);\n        } else {\n          res.status(404).json({\n            status: 404,\n            message: `No answers by user:${userID} were found`,\n          });\n        }\n      })\n      .catch((err) => {\n        if (err) {\n          console.error(`Error while searching for answers by user:${userID}`, err);\n          res.status(500).json({\n            message: `Error while searching for answers by user:${userID}`,\n            err,\n          });\n        }\n      });\n  });\n});\n\n// Answer a question\nrouter.post('/', retrieveToken, (req, res) => {\n  verifyToken(req.token)\n    .then((authData) => {\n      // Authdata is available if needed\n      if (authData === 403) {\n        console.log('Authdata error posting answer');\n        res.status(403).json({\n          status: 403,\n          message: 'Invalid credentials',\n        });\n        return;\n      }\n\n      const {\n        question_id,\n      } = req.body;\n      const {\n        user_id,\n      } = authData.user;\n      const {\n        text,\n      } = req.body;\n\n      const newAnswer = new Answer({\n        question_id,\n        user_id,\n        text,\n      });\n\n      newAnswer.save()\n        .then((result) => {\n          res.status(201).json({\n            message: 'Success saving answer',\n            status: 201,\n            result,\n          });\n        })\n        .catch((err) => {\n          console.error(`Error while saving answer to database : ${err}`);\n          res.status(500).json({\n            message: 'Error while saving answer to database',\n            err,\n          });\n        });\n    })\n    .catch((err) => {\n      if (err) {\n        const message = 'An error ocurred validating user token';\n        console.error(message, err);\n        res.status(500).json({\n          status: 500,\n          message,\n          err,\n        });\n      }\n    });\n});\n\n\n// Accept an answer\nrouter.patch('/accept/:answerID', retrieveToken, (req, res) => {\n  verifyToken(req.token)\n    .then((authData) => {\n      // Authdata is available if needed\n      if (authData === 403) {\n        res.status(403).json({\n          status: 403,\n          message: 'Invalid credentials',\n        });\n        return;\n      }\n\n      const {\n        answerID,\n      } = req.params;\n      const filter = {\n        _id: answerID,\n      };\n      const update = {\n        preferred: true,\n      };\n      Answer.findOneAndUpdate(filter, update)\n        .then((result) => {\n          res.status(200).json(result);\n        })\n        .catch((err) => {\n          const message = `Error updating answer:${answerID}`;\n          console.error(message, err);\n          res.status(500).json(message, err);\n        });\n    })\n    .catch((err) => {\n      const message = `Error verifying user token to update answer:${answerID}`;\n      console.error(message, err);\n      res.status(500).json(message, err);\n    });\n});\n\n// Delete an answer\nrouter.delete('/:answerID', retrieveToken, (req, res) => {\n  verifyToken(req.token)\n    .then((authData) => {\n      // Authdata is available if needed\n      if (authData === 403) {\n        res.status(403).json({\n          status: 403,\n          message: 'Invalid credentials',\n        });\n        return;\n      }\n\n      const {\n        answerID,\n      } = req.params;\n\n      Answer.findByIdAndDelete({\n        _id: answerID,\n      })\n        .then((result) => {\n          res.status(200).json(result);\n        })\n        .catch((err) => {\n          const message = `Error deleting answer:${answerID}`;\n          console.error(message, err);\n          res.status(500).json(message, err);\n        });\n    })\n    .catch((err) => {\n      const message = `Error verifying user token to delete answer:${answerID}`;\n      console.error(message, err);\n      res.status(500).json(message, err);\n    });\n});\n\n// Upvote an answer\n\n// Flag an answer as accepted\n\nmodule.exports = router;\n"],"file":"answers.js"}